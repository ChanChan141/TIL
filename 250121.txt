왜 is 대신 ==를 사용해야하나

is는 객체의 식별성(메모리 주소)을 비교하므로 숫자나 문자열 같은 값 자체를 비교하는 상황은 적절하지 않음
a = 9999
b = 9999

print(a is b) # False

is 연산자는 True, False, None을 비교할때 쓰임

메모리 주소
-----------------

Trailing Comma 일반적으로 권장사항
후행쉼표를 쓰는데 한줄로 쓰는건 안좋은 표현임

--------------------------

#import copy
catalog = [
    ['시간의 틈', '반짝임의 어둠', '망각의 경계'],
    ['연기의 수수께끼', '장면의 고백', '드라마의 그림자'],
    ['황금의 칼날', '비열한 간신', '무명의 영웅'],
    ['성공의 열쇠', '내면의 변화', '목표의 달성'],
]


''' 
도서 제목 '성공의 열쇠', '내면의 변화', '목표의 달성' 을 각각
'성공을 향한 한 걸음', '내 삶의 변화', '목표 달성의 비밀' 가 되도록 변경하시오.
'''
backup_catalog = catalog[::]
catalog[3] = ['성공을 향한 한 걸음','내 삶의 변화','목표 달성의 비밀']
# backup_catalog = copy.deepcopy(catalog)
# catalog[3][0] = '성공을 향한 한 걸음'
# catalog[3][1] = '내 삶의 변화'
# catalog[3][2] = '목표 달성의 비밀'

print('catalog와 backup_catalog를 비교한 결과')
# 식별 연산자로 catalog와 backup_catalog를 비교한 결과를 출력하시오.
print(backup_catalog == catalog)

print('backup_catalog : ')
print(backup_catalog)
print()

print('catalog : ')
print(catalog)

___________________________________________________________________________

data = [{'has_more': False,
  'next_cursor': None,
  'object': 'list',
  'page_or_database': {},
  'request_id': 'a5163fff-758f-45ea-b6fb',
  'results': [{'archived': False,
               'cover': None,
               'created_by': {'object': 'user'},
               'created_time': '2023-06-15T04:29:00.000Z',
               'icon': None,
               'last_edited_by': {'object': 'user'},
               'last_edited_time': '2023-12-12T09:19:00.000Z',
               'object': 'page',
               'parent': {'type': 'database_id'},
               'properties': {'setNum': {'id': '%7DK%40%5C',
                                         'number': 1,
                                         'type': 'number'},
                              '과목': {'id': 'YuIE',
                                     'multi_select': [{'color': 'default',
                                                       'name': 'Python'}],
                                     'type': 'multi_select'},
                              '구분': {'id': '%40%3EmR',
                                     'select': {'color': 'purple',
                                                'name': '실습'},
                                     'type': 'select'},
                              '단계': {'id': 'T%7B%7BP',
                                     'select': {'color': 'default',
                                                'name': '3'},
                                     'type': 'select'},
                              '문제번호': {'id': 'uEBt',
                                       'number': 1431,
                                       'type': 'number'},
                              '제목': {'id': 'title',
                                     'title': [{'annotations': {'bold': False,
                                                                'code': False,
                                                                'color': 'default',
                                                                'italic': False,
                                                                'strikethrough': False,
                                                                'underline': False},
                                                'href': None,
                                                'plain_text': '복잡한 자료구조',
                                                'text': {'content': '복잡한 자료구조',
                                                         'link': None},
                                                'type': 'text'}],
                                     'type': 'title'},
                              '일차': {'id': 'nWnH',
                                     'number': '2',
                                     'type': 'number'},
                              '커리큘럼': {'id': 'T%3AR_',
                                       'multi_select': [{'color': 'default',
                                                         'name': 'fundamentals-of-python'}],
                                       'type': 'multi_select'}},
               'public_url': None
            }],
  'type': 'page_or_database'}]

# 아래에 코드를 작성하시오.
properties = data[0]["results"][0]["properties"]

title = properties['제목']['title'][0]["plain_text"]
day = properties['일차']['number']
level = properties['단계']['select']['name']
subject = properties['과목']["multi_select"][0]['name']

first_data = {}
first_data['제목'] = title
first_data['일차'] = int(day)
first_data['단계'] = level +"단계"
first_data['과목'] = subject

print(first_data)
-----------------------------------------------------------
얕은복사, deepcopy
#import copy
catalog = [
    ['시간의 틈', '반짝임의 어둠', '망각의 경계'],
    ['연기의 수수께끼', '장면의 고백', '드라마의 그림자'],
    ['황금의 칼날', '비열한 간신', '무명의 영웅'],
    ['성공의 열쇠', '내면의 변화', '목표의 달성'],
]


''' 
도서 제목 '성공의 열쇠', '내면의 변화', '목표의 달성' 을 각각
'성공을 향한 한 걸음', '내 삶의 변화', '목표 달성의 비밀' 가 되도록 변경하시오.
'''
backup_catalog = catalog[::]
catalog[3] = ['성공을 향한 한 걸음','내 삶의 변화','목표 달성의 비밀']
# backup_catalog = copy.deepcopy(catalog)
# catalog[3][0] = '성공을 향한 한 걸음'
# catalog[3][1] = '내 삶의 변화'
# catalog[3][2] = '목표 달성의 비밀'

print('catalog와 backup_catalog를 비교한 결과')
# 식별 연산자로 catalog와 backup_catalog를 비교한 결과를 출력하시오.
print(backup_catalog == catalog)

print('backup_catalog : ')
print(backup_catalog)
print()

print('catalog : ')
print(catalog)




